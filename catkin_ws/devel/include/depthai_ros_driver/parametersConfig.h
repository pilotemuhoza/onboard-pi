//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the depthai_ros_driver package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __depthai_ros_driver__PARAMETERSCONFIG_H__
#define __depthai_ros_driver__PARAMETERSCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace depthai_ros_driver
{
  class parametersConfigStatics;

  class parametersConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(parametersConfig &config, const parametersConfig &max, const parametersConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const parametersConfig &config1, const parametersConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, parametersConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const parametersConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, parametersConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const parametersConfig &config) const = 0;
      virtual void getValue(const parametersConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T parametersConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T parametersConfig::* field;

      virtual void clamp(parametersConfig &config, const parametersConfig &max, const parametersConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const parametersConfig &config1, const parametersConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, parametersConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const parametersConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, parametersConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const parametersConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const parametersConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, parametersConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, parametersConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<parametersConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(parametersConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);


      }
    }

    

    bool state;
    std::string name;

    class CAMERA
{
  public:
    CAMERA()
    {
      state = true;
      name = "camera";
    }

    void setParams(parametersConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("camera_i_enable_imu"==(*_i)->name){camera_i_enable_imu = boost::any_cast<bool>(val);}
        if("camera_i_enable_ir"==(*_i)->name){camera_i_enable_ir = boost::any_cast<bool>(val);}
        if("camera_i_floodlight_brightness"==(*_i)->name){camera_i_floodlight_brightness = boost::any_cast<double>(val);}
        if("camera_i_ip"==(*_i)->name){camera_i_ip = boost::any_cast<std::string>(val);}
        if("camera_i_laser_dot_brightness"==(*_i)->name){camera_i_laser_dot_brightness = boost::any_cast<double>(val);}
        if("camera_i_mx_id"==(*_i)->name){camera_i_mx_id = boost::any_cast<std::string>(val);}
        if("camera_i_usb_port_id"==(*_i)->name){camera_i_usb_port_id = boost::any_cast<std::string>(val);}
        if("camera_i_nn_type"==(*_i)->name){camera_i_nn_type = boost::any_cast<std::string>(val);}
        if("camera_i_pipeline_type"==(*_i)->name){camera_i_pipeline_type = boost::any_cast<std::string>(val);}
        if("camera_i_usb_speed"==(*_i)->name){camera_i_usb_speed = boost::any_cast<std::string>(val);}
        if("left_i_board_socket_id"==(*_i)->name){left_i_board_socket_id = boost::any_cast<int>(val);}
        if("left_i_calibration_file"==(*_i)->name){left_i_calibration_file = boost::any_cast<std::string>(val);}
        if("left_i_fps"==(*_i)->name){left_i_fps = boost::any_cast<double>(val);}
        if("left_i_height"==(*_i)->name){left_i_height = boost::any_cast<int>(val);}
        if("left_r_keep_preview_aspect_ratio"==(*_i)->name){left_r_keep_preview_aspect_ratio = boost::any_cast<bool>(val);}
        if("left_i_low_bandwidth"==(*_i)->name){left_i_low_bandwidth = boost::any_cast<bool>(val);}
        if("left_i_low_bandwidth_quality"==(*_i)->name){left_i_low_bandwidth_quality = boost::any_cast<int>(val);}
        if("left_i_max_q_size"==(*_i)->name){left_i_max_q_size = boost::any_cast<int>(val);}
        if("left_i_preview_size"==(*_i)->name){left_i_preview_size = boost::any_cast<int>(val);}
        if("left_i_publish_topic"==(*_i)->name){left_i_publish_topic = boost::any_cast<bool>(val);}
        if("left_i_resolution"==(*_i)->name){left_i_resolution = boost::any_cast<std::string>(val);}
        if("left_i_set_isp_scale"==(*_i)->name){left_i_set_isp_scale = boost::any_cast<bool>(val);}
        if("left_i_width"==(*_i)->name){left_i_width = boost::any_cast<int>(val);}
        if("left_r_exposure"==(*_i)->name){left_r_exposure = boost::any_cast<int>(val);}
        if("left_r_focus"==(*_i)->name){left_r_focus = boost::any_cast<int>(val);}
        if("left_r_iso"==(*_i)->name){left_r_iso = boost::any_cast<int>(val);}
        if("left_r_set_man_exposure"==(*_i)->name){left_r_set_man_exposure = boost::any_cast<bool>(val);}
        if("left_r_set_man_focus"==(*_i)->name){left_r_set_man_focus = boost::any_cast<bool>(val);}
        if("left_r_set_man_whitebalance"==(*_i)->name){left_r_set_man_whitebalance = boost::any_cast<bool>(val);}
        if("left_r_whitebalance"==(*_i)->name){left_r_whitebalance = boost::any_cast<int>(val);}
        if("right_i_board_socket_id"==(*_i)->name){right_i_board_socket_id = boost::any_cast<int>(val);}
        if("right_i_calibration_file"==(*_i)->name){right_i_calibration_file = boost::any_cast<std::string>(val);}
        if("right_i_fps"==(*_i)->name){right_i_fps = boost::any_cast<double>(val);}
        if("right_i_height"==(*_i)->name){right_i_height = boost::any_cast<int>(val);}
        if("right_r_keep_preview_aspect_ratio"==(*_i)->name){right_r_keep_preview_aspect_ratio = boost::any_cast<bool>(val);}
        if("right_i_low_bandwidth"==(*_i)->name){right_i_low_bandwidth = boost::any_cast<bool>(val);}
        if("right_i_low_bandwidth_quality"==(*_i)->name){right_i_low_bandwidth_quality = boost::any_cast<int>(val);}
        if("right_i_max_q_size"==(*_i)->name){right_i_max_q_size = boost::any_cast<int>(val);}
        if("right_i_preview_size"==(*_i)->name){right_i_preview_size = boost::any_cast<int>(val);}
        if("right_i_publish_topic"==(*_i)->name){right_i_publish_topic = boost::any_cast<bool>(val);}
        if("right_i_resolution"==(*_i)->name){right_i_resolution = boost::any_cast<std::string>(val);}
        if("right_i_set_isp_scale"==(*_i)->name){right_i_set_isp_scale = boost::any_cast<bool>(val);}
        if("right_i_width"==(*_i)->name){right_i_width = boost::any_cast<int>(val);}
        if("right_r_exposure"==(*_i)->name){right_r_exposure = boost::any_cast<int>(val);}
        if("right_r_focus"==(*_i)->name){right_r_focus = boost::any_cast<int>(val);}
        if("right_r_iso"==(*_i)->name){right_r_iso = boost::any_cast<int>(val);}
        if("right_r_set_man_exposure"==(*_i)->name){right_r_set_man_exposure = boost::any_cast<bool>(val);}
        if("right_r_set_man_focus"==(*_i)->name){right_r_set_man_focus = boost::any_cast<bool>(val);}
        if("right_r_set_man_whitebalance"==(*_i)->name){right_r_set_man_whitebalance = boost::any_cast<bool>(val);}
        if("right_r_whitebalance"==(*_i)->name){right_r_whitebalance = boost::any_cast<int>(val);}
        if("rgb_i_board_socket_id"==(*_i)->name){rgb_i_board_socket_id = boost::any_cast<int>(val);}
        if("rgb_i_calibration_file"==(*_i)->name){rgb_i_calibration_file = boost::any_cast<std::string>(val);}
        if("rgb_i_fps"==(*_i)->name){rgb_i_fps = boost::any_cast<double>(val);}
        if("rgb_i_height"==(*_i)->name){rgb_i_height = boost::any_cast<int>(val);}
        if("rgb_i_interleaved"==(*_i)->name){rgb_i_interleaved = boost::any_cast<bool>(val);}
        if("rgb_r_keep_preview_aspect_ratio"==(*_i)->name){rgb_r_keep_preview_aspect_ratio = boost::any_cast<bool>(val);}
        if("rgb_i_low_bandwidth"==(*_i)->name){rgb_i_low_bandwidth = boost::any_cast<bool>(val);}
        if("rgb_i_low_bandwidth_quality"==(*_i)->name){rgb_i_low_bandwidth_quality = boost::any_cast<int>(val);}
        if("rgb_i_max_q_size"==(*_i)->name){rgb_i_max_q_size = boost::any_cast<int>(val);}
        if("rgb_i_preview_size"==(*_i)->name){rgb_i_preview_size = boost::any_cast<int>(val);}
        if("rgb_i_publish_topic"==(*_i)->name){rgb_i_publish_topic = boost::any_cast<bool>(val);}
        if("rgb_i_enable_preview"==(*_i)->name){rgb_i_enable_preview = boost::any_cast<bool>(val);}
        if("rgb_i_resolution"==(*_i)->name){rgb_i_resolution = boost::any_cast<std::string>(val);}
        if("rgb_i_set_isp_scale"==(*_i)->name){rgb_i_set_isp_scale = boost::any_cast<bool>(val);}
        if("rgb_i_width"==(*_i)->name){rgb_i_width = boost::any_cast<int>(val);}
        if("rgb_r_exposure"==(*_i)->name){rgb_r_exposure = boost::any_cast<int>(val);}
        if("rgb_r_focus"==(*_i)->name){rgb_r_focus = boost::any_cast<int>(val);}
        if("rgb_r_iso"==(*_i)->name){rgb_r_iso = boost::any_cast<int>(val);}
        if("rgb_r_set_man_exposure"==(*_i)->name){rgb_r_set_man_exposure = boost::any_cast<bool>(val);}
        if("rgb_r_set_man_focus"==(*_i)->name){rgb_r_set_man_focus = boost::any_cast<bool>(val);}
        if("rgb_r_set_man_whitebalance"==(*_i)->name){rgb_r_set_man_whitebalance = boost::any_cast<bool>(val);}
        if("rgb_r_whitebalance"==(*_i)->name){rgb_r_whitebalance = boost::any_cast<int>(val);}
        if("stereo_i_align_depth"==(*_i)->name){stereo_i_align_depth = boost::any_cast<bool>(val);}
        if("stereo_i_calibration_file"==(*_i)->name){stereo_i_calibration_file = boost::any_cast<std::string>(val);}
        if("stereo_i_bilateral_sigma"==(*_i)->name){stereo_i_bilateral_sigma = boost::any_cast<int>(val);}
        if("stereo_i_board_socket_id"==(*_i)->name){stereo_i_board_socket_id = boost::any_cast<int>(val);}
        if("stereo_i_decimation_filter_decimation_factor"==(*_i)->name){stereo_i_decimation_filter_decimation_factor = boost::any_cast<int>(val);}
        if("stereo_i_decimation_filter_decimation_mode"==(*_i)->name){stereo_i_decimation_filter_decimation_mode = boost::any_cast<std::string>(val);}
        if("stereo_i_depth_filter_size"==(*_i)->name){stereo_i_depth_filter_size = boost::any_cast<int>(val);}
        if("stereo_i_depth_preset"==(*_i)->name){stereo_i_depth_preset = boost::any_cast<std::string>(val);}
        if("stereo_i_enable_decimation_filter"==(*_i)->name){stereo_i_enable_decimation_filter = boost::any_cast<bool>(val);}
        if("stereo_i_enable_distortion_correction"==(*_i)->name){stereo_i_enable_distortion_correction = boost::any_cast<bool>(val);}
        if("stereo_i_enable_spatial_filter"==(*_i)->name){stereo_i_enable_spatial_filter = boost::any_cast<bool>(val);}
        if("stereo_i_enable_temporal_filter"==(*_i)->name){stereo_i_enable_temporal_filter = boost::any_cast<bool>(val);}
        if("stereo_i_enable_threshold_filter"==(*_i)->name){stereo_i_enable_threshold_filter = boost::any_cast<bool>(val);}
        if("stereo_i_extended_disp"==(*_i)->name){stereo_i_extended_disp = boost::any_cast<bool>(val);}
        if("stereo_i_height"==(*_i)->name){stereo_i_height = boost::any_cast<int>(val);}
        if("stereo_i_low_bandwidth"==(*_i)->name){stereo_i_low_bandwidth = boost::any_cast<bool>(val);}
        if("stereo_i_low_bandwidth_quality"==(*_i)->name){stereo_i_low_bandwidth_quality = boost::any_cast<int>(val);}
        if("stereo_i_lr_check"==(*_i)->name){stereo_i_lr_check = boost::any_cast<bool>(val);}
        if("stereo_i_lrc_threshold"==(*_i)->name){stereo_i_lrc_threshold = boost::any_cast<int>(val);}
        if("stereo_i_max_q_size"==(*_i)->name){stereo_i_max_q_size = boost::any_cast<int>(val);}
        if("stereo_i_rectify_edge_fill_color"==(*_i)->name){stereo_i_rectify_edge_fill_color = boost::any_cast<int>(val);}
        if("stereo_i_spatial_filter_alpha"==(*_i)->name){stereo_i_spatial_filter_alpha = boost::any_cast<double>(val);}
        if("stereo_i_spatial_filter_delta"==(*_i)->name){stereo_i_spatial_filter_delta = boost::any_cast<int>(val);}
        if("stereo_i_spatial_filter_hole_filling_radius"==(*_i)->name){stereo_i_spatial_filter_hole_filling_radius = boost::any_cast<int>(val);}
        if("stereo_i_spatial_filter_iterations"==(*_i)->name){stereo_i_spatial_filter_iterations = boost::any_cast<int>(val);}
        if("stereo_i_stereo_conf_threshold"==(*_i)->name){stereo_i_stereo_conf_threshold = boost::any_cast<int>(val);}
        if("stereo_i_subpixel"==(*_i)->name){stereo_i_subpixel = boost::any_cast<bool>(val);}
        if("stereo_i_temporal_filter_alpha"==(*_i)->name){stereo_i_temporal_filter_alpha = boost::any_cast<double>(val);}
        if("stereo_i_temporal_filter_delta"==(*_i)->name){stereo_i_temporal_filter_delta = boost::any_cast<int>(val);}
        if("stereo_i_temporal_filter_persistency"==(*_i)->name){stereo_i_temporal_filter_persistency = boost::any_cast<std::string>(val);}
        if("stereo_i_threshold_filter_max_range"==(*_i)->name){stereo_i_threshold_filter_max_range = boost::any_cast<int>(val);}
        if("stereo_i_threshold_filter_min_range"==(*_i)->name){stereo_i_threshold_filter_min_range = boost::any_cast<int>(val);}
        if("stereo_i_width"==(*_i)->name){stereo_i_width = boost::any_cast<int>(val);}
        if("nn_i_nn_config_path"==(*_i)->name){nn_i_nn_config_path = boost::any_cast<std::string>(val);}
        if("imu_i_max_q_size"==(*_i)->name){imu_i_max_q_size = boost::any_cast<int>(val);}
      }
    }

    bool camera_i_enable_imu;
bool camera_i_enable_ir;
double camera_i_floodlight_brightness;
std::string camera_i_ip;
double camera_i_laser_dot_brightness;
std::string camera_i_mx_id;
std::string camera_i_usb_port_id;
std::string camera_i_nn_type;
std::string camera_i_pipeline_type;
std::string camera_i_usb_speed;
int left_i_board_socket_id;
std::string left_i_calibration_file;
double left_i_fps;
int left_i_height;
bool left_r_keep_preview_aspect_ratio;
bool left_i_low_bandwidth;
int left_i_low_bandwidth_quality;
int left_i_max_q_size;
int left_i_preview_size;
bool left_i_publish_topic;
std::string left_i_resolution;
bool left_i_set_isp_scale;
int left_i_width;
int left_r_exposure;
int left_r_focus;
int left_r_iso;
bool left_r_set_man_exposure;
bool left_r_set_man_focus;
bool left_r_set_man_whitebalance;
int left_r_whitebalance;
int right_i_board_socket_id;
std::string right_i_calibration_file;
double right_i_fps;
int right_i_height;
bool right_r_keep_preview_aspect_ratio;
bool right_i_low_bandwidth;
int right_i_low_bandwidth_quality;
int right_i_max_q_size;
int right_i_preview_size;
bool right_i_publish_topic;
std::string right_i_resolution;
bool right_i_set_isp_scale;
int right_i_width;
int right_r_exposure;
int right_r_focus;
int right_r_iso;
bool right_r_set_man_exposure;
bool right_r_set_man_focus;
bool right_r_set_man_whitebalance;
int right_r_whitebalance;
int rgb_i_board_socket_id;
std::string rgb_i_calibration_file;
double rgb_i_fps;
int rgb_i_height;
bool rgb_i_interleaved;
bool rgb_r_keep_preview_aspect_ratio;
bool rgb_i_low_bandwidth;
int rgb_i_low_bandwidth_quality;
int rgb_i_max_q_size;
int rgb_i_preview_size;
bool rgb_i_publish_topic;
bool rgb_i_enable_preview;
std::string rgb_i_resolution;
bool rgb_i_set_isp_scale;
int rgb_i_width;
int rgb_r_exposure;
int rgb_r_focus;
int rgb_r_iso;
bool rgb_r_set_man_exposure;
bool rgb_r_set_man_focus;
bool rgb_r_set_man_whitebalance;
int rgb_r_whitebalance;
bool stereo_i_align_depth;
std::string stereo_i_calibration_file;
int stereo_i_bilateral_sigma;
int stereo_i_board_socket_id;
int stereo_i_decimation_filter_decimation_factor;
std::string stereo_i_decimation_filter_decimation_mode;
int stereo_i_depth_filter_size;
std::string stereo_i_depth_preset;
bool stereo_i_enable_decimation_filter;
bool stereo_i_enable_distortion_correction;
bool stereo_i_enable_spatial_filter;
bool stereo_i_enable_temporal_filter;
bool stereo_i_enable_threshold_filter;
bool stereo_i_extended_disp;
int stereo_i_height;
bool stereo_i_low_bandwidth;
int stereo_i_low_bandwidth_quality;
bool stereo_i_lr_check;
int stereo_i_lrc_threshold;
int stereo_i_max_q_size;
int stereo_i_rectify_edge_fill_color;
double stereo_i_spatial_filter_alpha;
int stereo_i_spatial_filter_delta;
int stereo_i_spatial_filter_hole_filling_radius;
int stereo_i_spatial_filter_iterations;
int stereo_i_stereo_conf_threshold;
bool stereo_i_subpixel;
double stereo_i_temporal_filter_alpha;
int stereo_i_temporal_filter_delta;
std::string stereo_i_temporal_filter_persistency;
int stereo_i_threshold_filter_max_range;
int stereo_i_threshold_filter_min_range;
int stereo_i_width;
std::string nn_i_nn_config_path;
int imu_i_max_q_size;

    bool state;
    std::string name;

    
}camera;

}groups;



//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool camera_i_enable_imu;
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool camera_i_enable_ir;
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double camera_i_floodlight_brightness;
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_ip;
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double camera_i_laser_dot_brightness;
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_mx_id;
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_usb_port_id;
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_nn_type;
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_pipeline_type;
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string camera_i_usb_speed;
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_board_socket_id;
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string left_i_calibration_file;
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double left_i_fps;
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_height;
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_r_keep_preview_aspect_ratio;
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_i_low_bandwidth;
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_low_bandwidth_quality;
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_max_q_size;
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_preview_size;
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_i_publish_topic;
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string left_i_resolution;
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_i_set_isp_scale;
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_i_width;
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_r_exposure;
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_r_focus;
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_r_iso;
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_r_set_man_exposure;
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_r_set_man_focus;
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool left_r_set_man_whitebalance;
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int left_r_whitebalance;
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_board_socket_id;
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string right_i_calibration_file;
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double right_i_fps;
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_height;
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_r_keep_preview_aspect_ratio;
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_i_low_bandwidth;
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_low_bandwidth_quality;
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_max_q_size;
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_preview_size;
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_i_publish_topic;
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string right_i_resolution;
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_i_set_isp_scale;
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_i_width;
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_r_exposure;
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_r_focus;
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_r_iso;
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_r_set_man_exposure;
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_r_set_man_focus;
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool right_r_set_man_whitebalance;
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int right_r_whitebalance;
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_board_socket_id;
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string rgb_i_calibration_file;
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double rgb_i_fps;
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_height;
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_i_interleaved;
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_r_keep_preview_aspect_ratio;
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_i_low_bandwidth;
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_low_bandwidth_quality;
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_max_q_size;
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_preview_size;
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_i_publish_topic;
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_i_enable_preview;
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string rgb_i_resolution;
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_i_set_isp_scale;
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_i_width;
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_r_exposure;
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_r_focus;
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_r_iso;
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_r_set_man_exposure;
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_r_set_man_focus;
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool rgb_r_set_man_whitebalance;
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int rgb_r_whitebalance;
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_align_depth;
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string stereo_i_calibration_file;
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_bilateral_sigma;
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_board_socket_id;
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_decimation_filter_decimation_factor;
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string stereo_i_decimation_filter_decimation_mode;
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_depth_filter_size;
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string stereo_i_depth_preset;
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_enable_decimation_filter;
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_enable_distortion_correction;
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_enable_spatial_filter;
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_enable_temporal_filter;
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_enable_threshold_filter;
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_extended_disp;
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_height;
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_low_bandwidth;
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_low_bandwidth_quality;
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_lr_check;
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_lrc_threshold;
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_max_q_size;
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_rectify_edge_fill_color;
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double stereo_i_spatial_filter_alpha;
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_spatial_filter_delta;
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_spatial_filter_hole_filling_radius;
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_spatial_filter_iterations;
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_stereo_conf_threshold;
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      bool stereo_i_subpixel;
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      double stereo_i_temporal_filter_alpha;
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_temporal_filter_delta;
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string stereo_i_temporal_filter_persistency;
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_threshold_filter_max_range;
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_threshold_filter_min_range;
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int stereo_i_width;
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      std::string nn_i_nn_config_path;
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      int imu_i_max_q_size;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("parametersConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const parametersConfig &__max__ = __getMax__();
      const parametersConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const parametersConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const parametersConfig &__getDefault__();
    static const parametersConfig &__getMax__();
    static const parametersConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const parametersConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void parametersConfig::ParamDescription<std::string>::clamp(parametersConfig &config, const parametersConfig &max, const parametersConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class parametersConfigStatics
  {
    friend class parametersConfig;

    parametersConfigStatics()
    {
parametersConfig::GroupDescription<parametersConfig::DEFAULT, parametersConfig> Default("Default", "", 0, 0, true, &parametersConfig::groups);
parametersConfig::GroupDescription<parametersConfig::DEFAULT::CAMERA, parametersConfig::DEFAULT> camera("camera", "", 0, 1, true, &parametersConfig::DEFAULT::camera);
//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_enable_imu = 0;
//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_enable_imu = 1;
//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_enable_imu = 1;
//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("camera_i_enable_imu", "bool", 0, "Enabling imu", "", &parametersConfig::camera_i_enable_imu)));
//#line 12 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("camera_i_enable_imu", "bool", 0, "Enabling imu", "", &parametersConfig::camera_i_enable_imu)));
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_enable_ir = 0;
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_enable_ir = 1;
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_enable_ir = 1;
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("camera_i_enable_ir", "bool", 0, "Enabling IR", "", &parametersConfig::camera_i_enable_ir)));
//#line 13 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("camera_i_enable_ir", "bool", 0, "Enabling IR", "", &parametersConfig::camera_i_enable_ir)));
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_floodlight_brightness = 0.0;
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_floodlight_brightness = 1500.0;
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_floodlight_brightness = 0.0;
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("camera_i_floodlight_brightness", "double", 0, "Floodlight brightness", "", &parametersConfig::camera_i_floodlight_brightness)));
//#line 14 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("camera_i_floodlight_brightness", "double", 0, "Floodlight brightness", "", &parametersConfig::camera_i_floodlight_brightness)));
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_ip = "";
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_ip = "";
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_ip = "";
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_ip", "str", 0, "IP", "", &parametersConfig::camera_i_ip)));
//#line 15 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_ip", "str", 0, "IP", "", &parametersConfig::camera_i_ip)));
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_laser_dot_brightness = 0.0;
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_laser_dot_brightness = 1200.0;
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_laser_dot_brightness = 800.0;
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("camera_i_laser_dot_brightness", "double", 0, "Laser dot brightness", "", &parametersConfig::camera_i_laser_dot_brightness)));
//#line 16 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("camera_i_laser_dot_brightness", "double", 0, "Laser dot brightness", "", &parametersConfig::camera_i_laser_dot_brightness)));
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_mx_id = "";
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_mx_id = "";
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_mx_id = "";
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_mx_id", "str", 0, "MXID", "", &parametersConfig::camera_i_mx_id)));
//#line 17 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_mx_id", "str", 0, "MXID", "", &parametersConfig::camera_i_mx_id)));
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_usb_port_id = "";
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_usb_port_id = "";
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_usb_port_id = "";
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_usb_port_id", "str", 0, "USB port ID", "", &parametersConfig::camera_i_usb_port_id)));
//#line 18 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_usb_port_id", "str", 0, "USB port ID", "", &parametersConfig::camera_i_usb_port_id)));
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_nn_type = "";
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_nn_type = "";
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_nn_type = "spatial";
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_nn_type", "str", 0, "NN Type", "", &parametersConfig::camera_i_nn_type)));
//#line 19 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_nn_type", "str", 0, "NN Type", "", &parametersConfig::camera_i_nn_type)));
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_pipeline_type = "";
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_pipeline_type = "";
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_pipeline_type = "RGBD";
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_pipeline_type", "str", 0, "Pipeline type", "", &parametersConfig::camera_i_pipeline_type)));
//#line 20 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_pipeline_type", "str", 0, "Pipeline type", "", &parametersConfig::camera_i_pipeline_type)));
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.camera_i_usb_speed = "";
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.camera_i_usb_speed = "";
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.camera_i_usb_speed = "SUPER_PLUS";
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_usb_speed", "str", 0, "USB Speed", "", &parametersConfig::camera_i_usb_speed)));
//#line 21 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("camera_i_usb_speed", "str", 0, "USB Speed", "", &parametersConfig::camera_i_usb_speed)));
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_board_socket_id = -2147483648;
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_board_socket_id = 2147483647;
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_board_socket_id = 1;
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::left_i_board_socket_id)));
//#line 23 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::left_i_board_socket_id)));
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_calibration_file = "";
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_calibration_file = "";
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_calibration_file = "";
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("left_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::left_i_calibration_file)));
//#line 24 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("left_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::left_i_calibration_file)));
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_fps = -std::numeric_limits<double>::infinity();
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_fps = std::numeric_limits<double>::infinity();
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_fps = 30.0;
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("left_i_fps", "double", 0, "FPS", "", &parametersConfig::left_i_fps)));
//#line 25 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("left_i_fps", "double", 0, "FPS", "", &parametersConfig::left_i_fps)));
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_height = -2147483648;
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_height = 2147483647;
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_height = 720;
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_height", "int", 0, "Image height", "", &parametersConfig::left_i_height)));
//#line 26 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_height", "int", 0, "Image height", "", &parametersConfig::left_i_height)));
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_keep_preview_aspect_ratio = 0;
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_keep_preview_aspect_ratio = 1;
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_keep_preview_aspect_ratio = 1;
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::left_r_keep_preview_aspect_ratio)));
//#line 27 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::left_r_keep_preview_aspect_ratio)));
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_low_bandwidth = 0;
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_low_bandwidth = 1;
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_low_bandwidth = 0;
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::left_i_low_bandwidth)));
//#line 28 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::left_i_low_bandwidth)));
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_low_bandwidth_quality = 1;
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_low_bandwidth_quality = 100;
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_low_bandwidth_quality = 50;
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::left_i_low_bandwidth_quality)));
//#line 29 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::left_i_low_bandwidth_quality)));
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_max_q_size = -2147483648;
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_max_q_size = 2147483647;
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_max_q_size = 30;
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::left_i_max_q_size)));
//#line 30 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::left_i_max_q_size)));
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_preview_size = -2147483648;
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_preview_size = 2147483647;
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_preview_size = 416;
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::left_i_preview_size)));
//#line 31 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::left_i_preview_size)));
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_publish_topic = 0;
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_publish_topic = 1;
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_publish_topic = 0;
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::left_i_publish_topic)));
//#line 32 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::left_i_publish_topic)));
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_resolution = "";
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_resolution = "";
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_resolution = "720";
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("left_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::left_i_resolution)));
//#line 33 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("left_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::left_i_resolution)));
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_set_isp_scale = 0;
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_set_isp_scale = 1;
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_set_isp_scale = 1;
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::left_i_set_isp_scale)));
//#line 34 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::left_i_set_isp_scale)));
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_i_width = -2147483648;
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_i_width = 2147483647;
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_i_width = 1280;
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_width", "int", 0, "Image height", "", &parametersConfig::left_i_width)));
//#line 35 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_i_width", "int", 0, "Image height", "", &parametersConfig::left_i_width)));
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_exposure = 1;
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_exposure = 33000;
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_exposure = 1000;
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::left_r_exposure)));
//#line 36 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::left_r_exposure)));
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_focus = 0;
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_focus = 255;
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_focus = 1;
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_focus", "int", 0, "Focus", "", &parametersConfig::left_r_focus)));
//#line 37 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_focus", "int", 0, "Focus", "", &parametersConfig::left_r_focus)));
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_iso = 100;
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_iso = 1600;
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_iso = 800;
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::left_r_iso)));
//#line 38 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::left_r_iso)));
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_set_man_exposure = 0;
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_set_man_exposure = 1;
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_set_man_exposure = 0;
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::left_r_set_man_exposure)));
//#line 39 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::left_r_set_man_exposure)));
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_set_man_focus = 0;
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_set_man_focus = 1;
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_set_man_focus = 0;
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::left_r_set_man_focus)));
//#line 40 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::left_r_set_man_focus)));
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_set_man_whitebalance = 0;
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_set_man_whitebalance = 1;
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_set_man_whitebalance = 0;
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::left_r_set_man_whitebalance)));
//#line 41 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("left_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::left_r_set_man_whitebalance)));
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.left_r_whitebalance = 1000;
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.left_r_whitebalance = 12000;
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.left_r_whitebalance = 3300;
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::left_r_whitebalance)));
//#line 42 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("left_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::left_r_whitebalance)));
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_board_socket_id = -2147483648;
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_board_socket_id = 2147483647;
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_board_socket_id = 2;
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::right_i_board_socket_id)));
//#line 44 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::right_i_board_socket_id)));
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_calibration_file = "";
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_calibration_file = "";
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_calibration_file = "";
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("right_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::right_i_calibration_file)));
//#line 45 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("right_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::right_i_calibration_file)));
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_fps = -std::numeric_limits<double>::infinity();
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_fps = std::numeric_limits<double>::infinity();
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_fps = 30.0;
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("right_i_fps", "double", 0, "FPS", "", &parametersConfig::right_i_fps)));
//#line 46 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("right_i_fps", "double", 0, "FPS", "", &parametersConfig::right_i_fps)));
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_height = -2147483648;
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_height = 2147483647;
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_height = 720;
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_height", "int", 0, "Image height", "", &parametersConfig::right_i_height)));
//#line 47 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_height", "int", 0, "Image height", "", &parametersConfig::right_i_height)));
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_keep_preview_aspect_ratio = 0;
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_keep_preview_aspect_ratio = 1;
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_keep_preview_aspect_ratio = 1;
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::right_r_keep_preview_aspect_ratio)));
//#line 48 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::right_r_keep_preview_aspect_ratio)));
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_low_bandwidth = 0;
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_low_bandwidth = 1;
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_low_bandwidth = 0;
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::right_i_low_bandwidth)));
//#line 49 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::right_i_low_bandwidth)));
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_low_bandwidth_quality = 1;
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_low_bandwidth_quality = 100;
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_low_bandwidth_quality = 50;
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::right_i_low_bandwidth_quality)));
//#line 50 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::right_i_low_bandwidth_quality)));
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_max_q_size = -2147483648;
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_max_q_size = 2147483647;
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_max_q_size = 30;
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::right_i_max_q_size)));
//#line 51 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::right_i_max_q_size)));
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_preview_size = -2147483648;
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_preview_size = 2147483647;
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_preview_size = 416;
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::right_i_preview_size)));
//#line 52 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::right_i_preview_size)));
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_publish_topic = 0;
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_publish_topic = 1;
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_publish_topic = 0;
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::right_i_publish_topic)));
//#line 53 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::right_i_publish_topic)));
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_resolution = "";
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_resolution = "";
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_resolution = "720";
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("right_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::right_i_resolution)));
//#line 54 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("right_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::right_i_resolution)));
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_set_isp_scale = 0;
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_set_isp_scale = 1;
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_set_isp_scale = 1;
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::right_i_set_isp_scale)));
//#line 55 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::right_i_set_isp_scale)));
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_i_width = -2147483648;
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_i_width = 2147483647;
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_i_width = 1280;
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_width", "int", 0, "Image height", "", &parametersConfig::right_i_width)));
//#line 56 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_i_width", "int", 0, "Image height", "", &parametersConfig::right_i_width)));
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_exposure = 1;
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_exposure = 33000;
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_exposure = 1000;
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::right_r_exposure)));
//#line 57 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::right_r_exposure)));
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_focus = 0;
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_focus = 255;
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_focus = 1;
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_focus", "int", 0, "Focus", "", &parametersConfig::right_r_focus)));
//#line 58 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_focus", "int", 0, "Focus", "", &parametersConfig::right_r_focus)));
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_iso = 100;
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_iso = 1600;
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_iso = 800;
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::right_r_iso)));
//#line 59 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::right_r_iso)));
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_set_man_exposure = 0;
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_set_man_exposure = 1;
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_set_man_exposure = 0;
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::right_r_set_man_exposure)));
//#line 60 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::right_r_set_man_exposure)));
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_set_man_focus = 0;
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_set_man_focus = 1;
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_set_man_focus = 0;
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::right_r_set_man_focus)));
//#line 61 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::right_r_set_man_focus)));
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_set_man_whitebalance = 0;
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_set_man_whitebalance = 1;
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_set_man_whitebalance = 0;
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::right_r_set_man_whitebalance)));
//#line 62 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("right_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::right_r_set_man_whitebalance)));
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.right_r_whitebalance = 1000;
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.right_r_whitebalance = 12000;
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.right_r_whitebalance = 3300;
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::right_r_whitebalance)));
//#line 63 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("right_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::right_r_whitebalance)));
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_board_socket_id = -2147483648;
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_board_socket_id = 2147483647;
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_board_socket_id = 0;
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::rgb_i_board_socket_id)));
//#line 65 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_board_socket_id", "int", 0, "Sensor board socket id", "", &parametersConfig::rgb_i_board_socket_id)));
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_calibration_file = "";
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_calibration_file = "";
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_calibration_file = "";
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("rgb_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::rgb_i_calibration_file)));
//#line 66 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("rgb_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::rgb_i_calibration_file)));
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_fps = -std::numeric_limits<double>::infinity();
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_fps = std::numeric_limits<double>::infinity();
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_fps = 60.0;
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("rgb_i_fps", "double", 0, "FPS", "", &parametersConfig::rgb_i_fps)));
//#line 67 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("rgb_i_fps", "double", 0, "FPS", "", &parametersConfig::rgb_i_fps)));
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_height = -2147483648;
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_height = 2147483647;
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_height = 720;
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_height", "int", 0, "Image height", "", &parametersConfig::rgb_i_height)));
//#line 68 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_height", "int", 0, "Image height", "", &parametersConfig::rgb_i_height)));
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_interleaved = 0;
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_interleaved = 1;
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_interleaved = 1;
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_interleaved", "bool", 0, "Is frame interleaved or planar", "", &parametersConfig::rgb_i_interleaved)));
//#line 69 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_interleaved", "bool", 0, "Is frame interleaved or planar", "", &parametersConfig::rgb_i_interleaved)));
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_keep_preview_aspect_ratio = 0;
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_keep_preview_aspect_ratio = 1;
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_keep_preview_aspect_ratio = 1;
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::rgb_r_keep_preview_aspect_ratio)));
//#line 70 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_keep_preview_aspect_ratio", "bool", 0, "Keep preview aspect ratio", "", &parametersConfig::rgb_r_keep_preview_aspect_ratio)));
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_low_bandwidth = 0;
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_low_bandwidth = 1;
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_low_bandwidth = 0;
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::rgb_i_low_bandwidth)));
//#line 71 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::rgb_i_low_bandwidth)));
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_low_bandwidth_quality = 1;
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_low_bandwidth_quality = 100;
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_low_bandwidth_quality = 50;
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::rgb_i_low_bandwidth_quality)));
//#line 72 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::rgb_i_low_bandwidth_quality)));
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_max_q_size = -2147483648;
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_max_q_size = 2147483647;
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_max_q_size = 30;
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::rgb_i_max_q_size)));
//#line 73 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::rgb_i_max_q_size)));
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_preview_size = -2147483648;
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_preview_size = 2147483647;
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_preview_size = 416;
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::rgb_i_preview_size)));
//#line 74 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_preview_size", "int", 0, "Preview size", "", &parametersConfig::rgb_i_preview_size)));
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_publish_topic = 0;
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_publish_topic = 1;
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_publish_topic = 1;
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::rgb_i_publish_topic)));
//#line 75 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_publish_topic", "bool", 0, "Enable ROS topic", "", &parametersConfig::rgb_i_publish_topic)));
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_enable_preview = 0;
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_enable_preview = 1;
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_enable_preview = 0;
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_enable_preview", "bool", 0, "Enable ROS topic", "", &parametersConfig::rgb_i_enable_preview)));
//#line 76 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_enable_preview", "bool", 0, "Enable ROS topic", "", &parametersConfig::rgb_i_enable_preview)));
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_resolution = "";
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_resolution = "";
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_resolution = "1080";
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("rgb_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::rgb_i_resolution)));
//#line 77 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("rgb_i_resolution", "str", 0, "Sensor resolution", "", &parametersConfig::rgb_i_resolution)));
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_set_isp_scale = 0;
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_set_isp_scale = 1;
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_set_isp_scale = 1;
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::rgb_i_set_isp_scale)));
//#line 78 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_i_set_isp_scale", "bool", 0, "Set ISP scale", "", &parametersConfig::rgb_i_set_isp_scale)));
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_i_width = -2147483648;
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_i_width = 2147483647;
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_i_width = 1280;
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_width", "int", 0, "Image height", "", &parametersConfig::rgb_i_width)));
//#line 79 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_i_width", "int", 0, "Image height", "", &parametersConfig::rgb_i_width)));
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_exposure = 1;
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_exposure = 33000;
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_exposure = 1000;
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::rgb_r_exposure)));
//#line 80 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_exposure", "int", 0, "Sensor exposure", "", &parametersConfig::rgb_r_exposure)));
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_focus = 0;
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_focus = 255;
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_focus = 1;
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_focus", "int", 0, "Focus", "", &parametersConfig::rgb_r_focus)));
//#line 81 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_focus", "int", 0, "Focus", "", &parametersConfig::rgb_r_focus)));
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_iso = 100;
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_iso = 1600;
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_iso = 800;
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::rgb_r_iso)));
//#line 82 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_iso", "int", 0, "Sensor iso", "", &parametersConfig::rgb_r_iso)));
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_set_man_exposure = 0;
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_set_man_exposure = 1;
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_set_man_exposure = 0;
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::rgb_r_set_man_exposure)));
//#line 83 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_exposure", "bool", 0, "Enable manual exposure", "", &parametersConfig::rgb_r_set_man_exposure)));
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_set_man_focus = 0;
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_set_man_focus = 1;
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_set_man_focus = 0;
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::rgb_r_set_man_focus)));
//#line 84 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_focus", "bool", 0, "Enable manual focus", "", &parametersConfig::rgb_r_set_man_focus)));
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_set_man_whitebalance = 0;
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_set_man_whitebalance = 1;
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_set_man_whitebalance = 0;
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::rgb_r_set_man_whitebalance)));
//#line 85 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("rgb_r_set_man_whitebalance", "bool", 0, "Enable manual whitebalance", "", &parametersConfig::rgb_r_set_man_whitebalance)));
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.rgb_r_whitebalance = 1000;
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.rgb_r_whitebalance = 12000;
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.rgb_r_whitebalance = 3300;
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::rgb_r_whitebalance)));
//#line 86 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("rgb_r_whitebalance", "int", 0, "Whitebalance", "", &parametersConfig::rgb_r_whitebalance)));
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_align_depth = 0;
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_align_depth = 1;
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_align_depth = 1;
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_align_depth", "bool", 0, "Whether to align depth to RGB", "", &parametersConfig::stereo_i_align_depth)));
//#line 88 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_align_depth", "bool", 0, "Whether to align depth to RGB", "", &parametersConfig::stereo_i_align_depth)));
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_calibration_file = "";
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_calibration_file = "";
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_calibration_file = "";
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::stereo_i_calibration_file)));
//#line 89 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_calibration_file", "str", 0, "Path to calibration file", "", &parametersConfig::stereo_i_calibration_file)));
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_bilateral_sigma = -2147483648;
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_bilateral_sigma = 2147483647;
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_bilateral_sigma = 0;
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_bilateral_sigma", "int", 0, "Bilateral sigma", "", &parametersConfig::stereo_i_bilateral_sigma)));
//#line 90 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_bilateral_sigma", "int", 0, "Bilateral sigma", "", &parametersConfig::stereo_i_bilateral_sigma)));
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_board_socket_id = -2147483648;
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_board_socket_id = 2147483647;
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_board_socket_id = 0;
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_board_socket_id", "int", 0, "Board socket id, depends on alignment", "", &parametersConfig::stereo_i_board_socket_id)));
//#line 91 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_board_socket_id", "int", 0, "Board socket id, depends on alignment", "", &parametersConfig::stereo_i_board_socket_id)));
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_decimation_filter_decimation_factor = -2147483648;
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_decimation_filter_decimation_factor = 2147483647;
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_decimation_filter_decimation_factor = 1;
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_decimation_filter_decimation_factor", "int", 0, "Decimation factor", "", &parametersConfig::stereo_i_decimation_filter_decimation_factor)));
//#line 92 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_decimation_filter_decimation_factor", "int", 0, "Decimation factor", "", &parametersConfig::stereo_i_decimation_filter_decimation_factor)));
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_decimation_filter_decimation_mode = "";
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_decimation_filter_decimation_mode = "";
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_decimation_filter_decimation_mode = "PIXEL_SKIPPING";
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_decimation_filter_decimation_mode", "str", 0, "Decimation mode", "", &parametersConfig::stereo_i_decimation_filter_decimation_mode)));
//#line 93 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_decimation_filter_decimation_mode", "str", 0, "Decimation mode", "", &parametersConfig::stereo_i_decimation_filter_decimation_mode)));
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_depth_filter_size = -2147483648;
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_depth_filter_size = 2147483647;
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_depth_filter_size = 5;
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_depth_filter_size", "int", 0, "Depth filter size", "", &parametersConfig::stereo_i_depth_filter_size)));
//#line 94 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_depth_filter_size", "int", 0, "Depth filter size", "", &parametersConfig::stereo_i_depth_filter_size)));
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_depth_preset = "";
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_depth_preset = "";
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_depth_preset = "HIGH_ACCURACY";
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_depth_preset", "str", 0, "Depth preset", "", &parametersConfig::stereo_i_depth_preset)));
//#line 95 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_depth_preset", "str", 0, "Depth preset", "", &parametersConfig::stereo_i_depth_preset)));
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_enable_decimation_filter = 0;
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_enable_decimation_filter = 1;
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_enable_decimation_filter = 0;
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_decimation_filter", "bool", 0, "Enable decimation filter", "", &parametersConfig::stereo_i_enable_decimation_filter)));
//#line 96 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_decimation_filter", "bool", 0, "Enable decimation filter", "", &parametersConfig::stereo_i_enable_decimation_filter)));
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_enable_distortion_correction = 0;
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_enable_distortion_correction = 1;
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_enable_distortion_correction = 0;
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_distortion_correction", "bool", 0, "Enable distortion correction", "", &parametersConfig::stereo_i_enable_distortion_correction)));
//#line 97 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_distortion_correction", "bool", 0, "Enable distortion correction", "", &parametersConfig::stereo_i_enable_distortion_correction)));
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_enable_spatial_filter = 0;
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_enable_spatial_filter = 1;
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_enable_spatial_filter = 0;
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_spatial_filter", "bool", 0, "Enable spatial filter", "", &parametersConfig::stereo_i_enable_spatial_filter)));
//#line 98 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_spatial_filter", "bool", 0, "Enable spatial filter", "", &parametersConfig::stereo_i_enable_spatial_filter)));
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_enable_temporal_filter = 0;
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_enable_temporal_filter = 1;
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_enable_temporal_filter = 0;
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_temporal_filter", "bool", 0, "Enable temporal filter", "", &parametersConfig::stereo_i_enable_temporal_filter)));
//#line 99 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_temporal_filter", "bool", 0, "Enable temporal filter", "", &parametersConfig::stereo_i_enable_temporal_filter)));
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_enable_threshold_filter = 0;
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_enable_threshold_filter = 1;
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_enable_threshold_filter = 0;
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_threshold_filter", "bool", 0, "Enable threshold filter", "", &parametersConfig::stereo_i_enable_threshold_filter)));
//#line 100 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_enable_threshold_filter", "bool", 0, "Enable threshold filter", "", &parametersConfig::stereo_i_enable_threshold_filter)));
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_extended_disp = 0;
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_extended_disp = 1;
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_extended_disp = 0;
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_extended_disp", "bool", 0, "Enable extended disparity", "", &parametersConfig::stereo_i_extended_disp)));
//#line 101 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_extended_disp", "bool", 0, "Enable extended disparity", "", &parametersConfig::stereo_i_extended_disp)));
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_height = -2147483648;
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_height = 2147483647;
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_height = 720;
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_height", "int", 0, "Image height, based on alignment", "", &parametersConfig::stereo_i_height)));
//#line 102 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_height", "int", 0, "Image height, based on alignment", "", &parametersConfig::stereo_i_height)));
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_low_bandwidth = 0;
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_low_bandwidth = 1;
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_low_bandwidth = 0;
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::stereo_i_low_bandwidth)));
//#line 103 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_low_bandwidth", "bool", 0, "Use encoding for data", "", &parametersConfig::stereo_i_low_bandwidth)));
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_low_bandwidth_quality = 1;
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_low_bandwidth_quality = 100;
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_low_bandwidth_quality = 50;
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::stereo_i_low_bandwidth_quality)));
//#line 104 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_low_bandwidth_quality", "int", 0, "Quality when using low-bandwidth mode", "", &parametersConfig::stereo_i_low_bandwidth_quality)));
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_lr_check = 0;
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_lr_check = 1;
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_lr_check = 1;
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_lr_check", "bool", 0, "Enable left-right check", "", &parametersConfig::stereo_i_lr_check)));
//#line 105 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_lr_check", "bool", 0, "Enable left-right check", "", &parametersConfig::stereo_i_lr_check)));
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_lrc_threshold = -2147483648;
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_lrc_threshold = 2147483647;
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_lrc_threshold = 10;
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_lrc_threshold", "int", 0, "Left-right check threshold", "", &parametersConfig::stereo_i_lrc_threshold)));
//#line 106 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_lrc_threshold", "int", 0, "Left-right check threshold", "", &parametersConfig::stereo_i_lrc_threshold)));
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_max_q_size = -2147483648;
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_max_q_size = 2147483647;
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_max_q_size = 30;
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::stereo_i_max_q_size)));
//#line 107 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::stereo_i_max_q_size)));
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_rectify_edge_fill_color = -2147483648;
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_rectify_edge_fill_color = 2147483647;
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_rectify_edge_fill_color = 0;
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_rectify_edge_fill_color", "int", 0, "Rectify edge fill color", "", &parametersConfig::stereo_i_rectify_edge_fill_color)));
//#line 108 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_rectify_edge_fill_color", "int", 0, "Rectify edge fill color", "", &parametersConfig::stereo_i_rectify_edge_fill_color)));
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_spatial_filter_alpha = -std::numeric_limits<double>::infinity();
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_spatial_filter_alpha = std::numeric_limits<double>::infinity();
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_spatial_filter_alpha = 0.5;
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("stereo_i_spatial_filter_alpha", "double", 0, "Spatial filter alpha", "", &parametersConfig::stereo_i_spatial_filter_alpha)));
//#line 109 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("stereo_i_spatial_filter_alpha", "double", 0, "Spatial filter alpha", "", &parametersConfig::stereo_i_spatial_filter_alpha)));
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_spatial_filter_delta = -2147483648;
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_spatial_filter_delta = 2147483647;
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_spatial_filter_delta = 20;
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_delta", "int", 0, "Spatial filter delta", "", &parametersConfig::stereo_i_spatial_filter_delta)));
//#line 110 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_delta", "int", 0, "Spatial filter delta", "", &parametersConfig::stereo_i_spatial_filter_delta)));
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_spatial_filter_hole_filling_radius = -2147483648;
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_spatial_filter_hole_filling_radius = 2147483647;
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_spatial_filter_hole_filling_radius = 2;
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_hole_filling_radius", "int", 0, "Spatial filter hole filling radius", "", &parametersConfig::stereo_i_spatial_filter_hole_filling_radius)));
//#line 111 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_hole_filling_radius", "int", 0, "Spatial filter hole filling radius", "", &parametersConfig::stereo_i_spatial_filter_hole_filling_radius)));
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_spatial_filter_iterations = -2147483648;
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_spatial_filter_iterations = 2147483647;
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_spatial_filter_iterations = 1;
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_iterations", "int", 0, "Spatial filter iterations", "", &parametersConfig::stereo_i_spatial_filter_iterations)));
//#line 112 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_spatial_filter_iterations", "int", 0, "Spatial filter iterations", "", &parametersConfig::stereo_i_spatial_filter_iterations)));
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_stereo_conf_threshold = 0;
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_stereo_conf_threshold = 255;
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_stereo_conf_threshold = 255;
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_stereo_conf_threshold", "int", 0, "Stereo confidence threshold", "", &parametersConfig::stereo_i_stereo_conf_threshold)));
//#line 113 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_stereo_conf_threshold", "int", 0, "Stereo confidence threshold", "", &parametersConfig::stereo_i_stereo_conf_threshold)));
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_subpixel = 0;
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_subpixel = 1;
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_subpixel = 0;
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_subpixel", "bool", 0, "Subpixel mode", "", &parametersConfig::stereo_i_subpixel)));
//#line 114 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<bool>("stereo_i_subpixel", "bool", 0, "Subpixel mode", "", &parametersConfig::stereo_i_subpixel)));
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_temporal_filter_alpha = -std::numeric_limits<double>::infinity();
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_temporal_filter_alpha = std::numeric_limits<double>::infinity();
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_temporal_filter_alpha = 0.4;
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("stereo_i_temporal_filter_alpha", "double", 0, "Temporal filter alpha", "", &parametersConfig::stereo_i_temporal_filter_alpha)));
//#line 115 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<double>("stereo_i_temporal_filter_alpha", "double", 0, "Temporal filter alpha", "", &parametersConfig::stereo_i_temporal_filter_alpha)));
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_temporal_filter_delta = -2147483648;
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_temporal_filter_delta = 2147483647;
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_temporal_filter_delta = 20;
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_temporal_filter_delta", "int", 0, "Temporal filter delta", "", &parametersConfig::stereo_i_temporal_filter_delta)));
//#line 116 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_temporal_filter_delta", "int", 0, "Temporal filter delta", "", &parametersConfig::stereo_i_temporal_filter_delta)));
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_temporal_filter_persistency = "";
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_temporal_filter_persistency = "";
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_temporal_filter_persistency = "VALID_2_IN_LAST_4";
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_temporal_filter_persistency", "str", 0, "Temporal filter persistency", "", &parametersConfig::stereo_i_temporal_filter_persistency)));
//#line 117 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("stereo_i_temporal_filter_persistency", "str", 0, "Temporal filter persistency", "", &parametersConfig::stereo_i_temporal_filter_persistency)));
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_threshold_filter_max_range = -2147483648;
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_threshold_filter_max_range = 2147483647;
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_threshold_filter_max_range = 15000;
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_threshold_filter_max_range", "int", 0, "Threshold filter max range", "", &parametersConfig::stereo_i_threshold_filter_max_range)));
//#line 118 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_threshold_filter_max_range", "int", 0, "Threshold filter max range", "", &parametersConfig::stereo_i_threshold_filter_max_range)));
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_threshold_filter_min_range = -2147483648;
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_threshold_filter_min_range = 2147483647;
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_threshold_filter_min_range = 400;
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_threshold_filter_min_range", "int", 0, "Threshold filter min range", "", &parametersConfig::stereo_i_threshold_filter_min_range)));
//#line 119 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_threshold_filter_min_range", "int", 0, "Threshold filter min range", "", &parametersConfig::stereo_i_threshold_filter_min_range)));
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.stereo_i_width = -2147483648;
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.stereo_i_width = 2147483647;
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.stereo_i_width = 1280;
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_width", "int", 0, "Image width, based on alignment", "", &parametersConfig::stereo_i_width)));
//#line 120 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("stereo_i_width", "int", 0, "Image width, based on alignment", "", &parametersConfig::stereo_i_width)));
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.nn_i_nn_config_path = "";
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.nn_i_nn_config_path = "";
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.nn_i_nn_config_path = "depthai_ros_driver/mobilenet";
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("nn_i_nn_config_path", "str", 0, "NN JSON Config path", "", &parametersConfig::nn_i_nn_config_path)));
//#line 122 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<std::string>("nn_i_nn_config_path", "str", 0, "NN JSON Config path", "", &parametersConfig::nn_i_nn_config_path)));
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __min__.imu_i_max_q_size = -2147483648;
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __max__.imu_i_max_q_size = 2147483647;
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __default__.imu_i_max_q_size = 30;
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      camera.abstract_parameters.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("imu_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::imu_i_max_q_size)));
//#line 123 "/home/cdrone/catkin_ws/src/depthai-ros/depthai_ros_driver/cfg/parameters.cfg"
      __param_descriptions__.push_back(parametersConfig::AbstractParamDescriptionConstPtr(new parametersConfig::ParamDescription<int>("imu_i_max_q_size", "int", 0, "Internal queue size", "", &parametersConfig::imu_i_max_q_size)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      camera.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(parametersConfig::AbstractGroupDescriptionConstPtr(new parametersConfig::GroupDescription<parametersConfig::DEFAULT::CAMERA, parametersConfig::DEFAULT>(camera)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(parametersConfig::AbstractGroupDescriptionConstPtr(new parametersConfig::GroupDescription<parametersConfig::DEFAULT::CAMERA, parametersConfig::DEFAULT>(camera)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(parametersConfig::AbstractGroupDescriptionConstPtr(new parametersConfig::GroupDescription<parametersConfig::DEFAULT, parametersConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<parametersConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<parametersConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<parametersConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    parametersConfig __max__;
    parametersConfig __min__;
    parametersConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const parametersConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static parametersConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &parametersConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const parametersConfig &parametersConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const parametersConfig &parametersConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const parametersConfig &parametersConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<parametersConfig::AbstractParamDescriptionConstPtr> &parametersConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<parametersConfig::AbstractGroupDescriptionConstPtr> &parametersConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const parametersConfigStatics *parametersConfig::__get_statics__()
  {
    const static parametersConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = parametersConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __PARAMETERSRECONFIGURATOR_H__
